name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Déclenche pour chaque push vers la branche principale
  pull_request:
    branches:
      - main  # Déclenche également pour les pull requests vers la branche principale

jobs:
  build_and_deploy:
    name: Build and Deploy Docker Services
    runs-on: windows-latest

    steps:
      # 1. Récupérer le code depuis le dépôt GitHub
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Se connecter à Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nom d'utilisateur Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Mot de passe ou jeton Docker Hub

      # 3. Construire l'image Docker pour le frontend
      - name: Build Docker image for frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f Dockerfile.frontend .

      # 4. Construire l'image Docker pour le backend
      - name: Build Docker image for backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f ./server/Dockerfile.backend ./server

      # 5. Pousser les images Docker sur Docker Hub
      - name: Push Docker images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # 6. Déployer les services en production avec docker-compose
      - name: Deploy services with Docker Compose
        run: |
          docker-compose down
          docker-compose pull
          docker-compose up -d